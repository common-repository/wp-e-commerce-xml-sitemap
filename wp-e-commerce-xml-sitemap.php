<?php
/*
 * Plugin Name: WP Shopping Cart XML Sitemap
 * Version: 1.1.5
 * Plugin URI: http://www.leewillis.co.uk/wordpress-plugins/?utm_source=wordpress&utm_medium=www&utm_campaign=wp-e-commerce-xml-sitemap
 * Description: Adds entries to XML sitemaps generated by Google XML Sitemaps Generator plugin (http://www.arnebrachhold.de/projects/wordpress-plugins/google-xml-sitemaps-generator/). Adds categories and products.
 * Author: Lee Willis
 * Author URI: http://www.leewillis.co.uk/?utm_source=wordpress&utm_medium=www&utm_campaign=wp-e-commerce-xml-sitemap
 */

function ses_wpsc_generate_category_entries () {

	global $wpdb, $wp_rewrite, $table_prefix;

	if (!defined('WPSC_VERSION') || WPSC_VERSION < 3.7) {
		$product_list_table =  "{$table_prefix}product_list";
		$item_category_assoc_table = "{$table_prefix}item_category_associations";
		$product_categories_table = "{$table_prefix}product_categories";
		$date_sql = " NULL AS dt ";
		$pwhere_sql = "";
	} else {
		$product_list_table = WPSC_TABLE_PRODUCT_LIST;
		$item_category_assoc_table = WPSC_TABLE_ITEM_CATEGORY_ASSOC;
		$product_categories_table = WPSC_TABLE_PRODUCT_CATEGORIES;
		$date_sql = " UNIX_TIMESTAMP(MAX(p.date_added)) as dt ";
		$pwhere_sql = " AND p.publish = 1 ";
	}

	$wp_rewrite->flush_rules();

	$generatorObject = &GoogleSitemapGenerator::GetInstance(); //Please note the "&" sign!

	if($generatorObject!=null) {

		$sql = $wpdb->prepare("SELECT c.id,
		                              $date_sql
		                         FROM $product_categories_table c,
		                              $item_category_assoc_table cp,
			                      $product_list_table p
		                        WHERE c.id = cp.category_id
		                          AND cp.product_id = p.id
		                          AND c.active = 1
		                          AND p.active = 1
		                          $pwhere_sql
		                     GROUP BY c.id");
		
		$results = $wpdb->get_results($sql);

		foreach ($results as $category) {
			// generatorObject will escape & to &amp; etc. Unfortunately WPSC has already done that - so un-encode it first
			$generatorObject->AddUrl(html_entity_decode(wpsc_category_url($category->id)), $category->dt, "weekly",0.25);
		}

	}

}

function ses_wpsc_generate_product_entries (){

	global $wpdb, $wp_rewrite, $table_prefix;

	if (!defined('WPSC_VERSION') || WPSC_VERSION < 3.7) {
		$product_list_table =  "{$table_prefix}product_list";
		$product_rating_table = "{$table_prefix}product_rating";
		$date_sql = " NULL AS dt ";
	} else {
		$product_list_table = WPSC_TABLE_PRODUCT_LIST;
		$product_rating_table = WPSC_TABLE_PRODUCT_RATING;
		$date_sql = " IF ( MAX(r.time) IS NULL OR UNIX_TIMESTAMP(date_added) > MAX(r.time),
	                                   UNIX_TIMESTAMP(date_added),
					   MAX(r.time)) AS dt ";
	        $where_sql = " AND publish = 1 ";
	}

	$wp_rewrite->flush_rules();

	$generatorObject = &GoogleSitemapGenerator::GetInstance(); //Please note the "&" sign!

	if($generatorObject!=null) {

		$sql = $wpdb->prepare("SELECT p.id,
		                              $date_sql
		                         FROM $product_list_table p
		                    LEFT JOIN $product_rating_table r
		                           ON p.id = r.productid
		                        WHERE active = 1
		                              $where_sql
		                     GROUP BY p.id");

		$results = $wpdb->get_results($sql);

		foreach ($results as $product) {
			// generatorObject will escape & to &amp; etc. Unfortunately WPSC has already done that - so un-encode it first
			$generatorObject->AddUrl(html_entity_decode(wpsc_product_url($product->id)), $product->dt, "weekly", 0.25);
		}

	}

}

function ses_wpsc_rebuild_sitemap ($id) {

	do_action('sm_rebuild');

}

add_action('sm_buildmap', 'ses_wpsc_generate_product_entries');
add_action('sm_buildmap', 'ses_wpsc_generate_category_entries');
add_action('wpsc_edit_product', 'ses_wpsc_rebuild_sitemap');
add_action('wpsc_rate_product', 'ses_wpsc_rebuild_sitemap');

?>
